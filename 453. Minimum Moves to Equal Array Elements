Adding 1 to (n-1) elements is equivalent to subtracting 1 from one of the elements and adding 1 to all elements. Adding 1 to all elements does not change anything in terms of equality. So we must find the min number of (subtract 1 from any element) operations. The only way to make all elements equal this way is to make them all equal to the min element of the array.
Hence, number of moves = sum(array) - n*min_element

class Solution {
public:
    int minMoves(vector<int>& nums) {
       int n = nums.size();
       if(n <= 1)
          return 0;
       int mn = nums[0];
       long sum = nums[0];
       for(int i = 1; i < n; ++i)
       {
           mn = min(mn,nums[i]);
           sum += nums[i];
       }
       return sum -long(mn)*long(n); 
    }
};
