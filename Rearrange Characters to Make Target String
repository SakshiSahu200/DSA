/*You are given a 0-indexed string num of length n consisting of digits.
Return true if for every index i in the range 0 <= i < n, the digit i occurs num[i] times in num, otherwise return false. 
 Input: num = "1210"
Output: true
Explanation:
num[0] = '1'. The digit 0 occurs once in num.
num[1] = '2'. The digit 1 occurs twice in num.
num[2] = '1'. The digit 2 occurs once in num.
num[3] = '0'. The digit 3 occurs zero times in num.
The condition holds true for every index in "1210", so return true.
*************/********************************

 int rearrangeCharacters(string st, string tc) {
        //"ilovecodingonleetcode", target = "code"
        int s[26]={0},t[26]={0};
        for(auto x:st)
            s[x-'a']++;
        for(auto x:tc)
            t[x-'a']++;
        int ans=INT_MAX;
        for(int i=0;i<26;i++){
            if(t[i]>0)
                ans= min(ans,s[i]/t[i]);
        }
    
    return ans;
    }
    
    
    
    /************using two maps
    
     bool digitCount(string num) {
    map<char,int>h;
        for(auto x:num){
            h[x]++;
        }
        for(int i=0;i<num.size();i++){
            char ch='0'+i;
            if(h[ch]==num[i]-'0')
                continue;
            else
                return false;}
            return true;
        }
