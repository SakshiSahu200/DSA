 // Input: nums = [0,1,0,3,12]
Output: [1,3,12,0,0]      ....Note maintain the relative order


***********  Method-1 ******************
Traverse the elements, if find non-zero, insert it to new vector and
also maintain a counter to count no. of zeroes so that you can insert that no. of zeroes in the end
But surely it will take some extra space O(n) and TC- O(n)

************  Method-2  *********************
using two for loops and if find 0, relace it with first non-zero and so on.
It wouldn't take extra space but still TC will be O(n^2)

 void moveZeroes(vector<int>& nums) {
        int n=nums.size();
        for(int i=0;i<n;i++)
        {
             if(nums[i]==0)
             {
            for(int j=i+1;j<n;j++)
            {
               if(nums[j]!=0){
                    swap(nums[i],nums[j]);
                   break;
                }
              }
            }
       }
    }
    
    **************** Method-3 ---------TWO POINTER APPROACH
void moveZeroes(vector<int>& nums) {
        int n=nums.size();
        if(n==1 ||n==0) return;
        int start=0;
        int sec= 0;
        while(sec!=n)
        {
            if(nums[sec]==0){
                sec++;
            }
            else
            {
                swap(nums[start],nums[sec]);
                start++;
                 sec++;
            }
        }
    }
