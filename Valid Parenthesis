

/***********************
class Solution {
public:
    bool isValid(string s) {
         stack<int>st;
        for(int i=0;i<s.length();i++){
        if(s[i]=='{' || s[i]=='(' || s[i]=='['){
            st.push(s[i]);}
        else
       {
           if(st.empty()) return false;
           
              char ch=st.top();
           st.pop();
           if(s[i]=='}'&&ch=='{')
                   continue;
           
            else  if(s[i]==')'&&ch=='(')
                   continue;
              else if(s[i]==']'&& ch=='[')
                   continue;
           
              else
                         return false;
    }}
        if(st.empty())
                         return true;
                       return false;  }
};

*******************/



class Solution {
public:
  
       bool matching(char a, char b)
    {
     return((a=='(' && b==')') || (a=='{' && b=='}') || (a=='[' && b==']'));
    }
    bool isValid(string s) {
        stack<int>st;
        for(int i=0;i<s.length();i++)
        {
           if(s[i]=='(' || s[i]=='{' || s[i]=='[')
           {
               st.push(s[i]);
           }
            else
            {
                if(st.empty()==true)
                {
                    return false;
                }
                else if (matching(st.top(), s[i])==false)
                {
                    return false;
                }
                else {
                    st.pop();
                }
            }
        }
        return (st.empty()==true);
    }
    
};
